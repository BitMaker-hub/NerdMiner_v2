// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.5.0
// LVGL version: 8.3.6
// Project name: han-wt32

#ifndef _HAN_WT32_UI_H
#define _HAN_WT32_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#include "lvgl.h"

#include "ui_helpers.h"
#include "ui_events.h"

// SCREEN: ui_SplashScreen
void ui_SplashScreen_screen_init(void);
extern lv_obj_t * ui_SplashScreen;
extern lv_obj_t * ui_lblpassword;
extern lv_obj_t * ui_lblssid;
extern lv_obj_t * ui_lblversion;
// CUSTOM VARIABLES

// SCREEN: ui_HomeScreen
void ui_HomeScreen_screen_init(void);
extern lv_obj_t * ui_HomeScreen;
extern lv_obj_t * ui_Container1;
void ui_event_btnconfirm(lv_event_t * e);
extern lv_obj_t * ui_btnconfirm;
void ui_event_btnpost(lv_event_t * e);
extern lv_obj_t * ui_btnpost;
extern lv_obj_t * ui_barhashrate;
void ui_event_btndelete(lv_event_t * e);
extern lv_obj_t * ui_btndelete;
extern lv_obj_t * ui_lblhashrate;
extern lv_obj_t * ui_lblbestdiff;
extern lv_obj_t * ui_lbltemplates;
extern lv_obj_t * ui_lblvalid;
extern lv_obj_t * ui_lblshares32;
extern lv_obj_t * ui_lblclock;
void ui_event_btnpre(lv_event_t * e);
extern lv_obj_t * ui_btnpre;
extern lv_obj_t * ui_lbltotalhashrate;
extern lv_obj_t * ui_lbltemperature;
extern lv_obj_t * ui_Label5;
extern lv_obj_t * ui_Label9;
extern lv_obj_t * ui_Label3;
extern lv_obj_t * ui_Label4;
extern lv_obj_t * ui_Label6;
extern lv_obj_t * ui_Label7;
extern lv_obj_t * ui_Label8;
extern lv_obj_t * ui_Label10;
extern lv_obj_t * ui_Label11;
extern lv_obj_t * ui_Label12;
extern lv_obj_t * ui_Container2;
extern lv_obj_t * ui_Container3;
extern lv_obj_t * ui_Container4;
extern lv_obj_t * ui_Label13;
extern lv_obj_t * ui_Label18;
// CUSTOM VARIABLES

// SCREEN: ui_StatsScreen
void ui_StatsScreen_screen_init(void);
extern lv_obj_t * ui_StatsScreen;
extern lv_obj_t * ui_Label2;
void ui_event_btnpre2(lv_event_t * e);
extern lv_obj_t * ui_btnpre2;
void ui_event_btnconfirm2(lv_event_t * e);
extern lv_obj_t * ui_btnconfirm2;
void ui_event_btnpost2(lv_event_t * e);
extern lv_obj_t * ui_btnpost2;
void ui_event_btndelete2(lv_event_t * e);
extern lv_obj_t * ui_btndelete2;
extern lv_obj_t * ui_Label16;
extern lv_obj_t * ui_Label20;
extern lv_obj_t * ui_Label23;
extern lv_obj_t * ui_Label26;
extern lv_obj_t * ui_Container10;
extern lv_obj_t * ui_Container11;
extern lv_obj_t * ui_Container12;
extern lv_obj_t * ui_Container9;
extern lv_obj_t * ui_Container13;
extern lv_obj_t * ui_Label34;
extern lv_obj_t * ui_Label35;
extern lv_obj_t * ui_lblPrice;
extern lv_obj_t * ui_lblGlobalHashrate;
extern lv_obj_t * ui_lblDifficulty;
extern lv_obj_t * ui_Label32;
extern lv_obj_t * ui_Label33;
extern lv_obj_t * ui_Label36;
extern lv_obj_t * ui_Label39;
extern lv_obj_t * ui_Label41;
extern lv_obj_t * ui_lblWorkers;
extern lv_obj_t * ui_lblTotHashrate;
extern lv_obj_t * ui_lblMaxDifficulty;
// CUSTOM VARIABLES

// SCREEN: ui_ClockScreen
void ui_ClockScreen_screen_init(void);
extern lv_obj_t * ui_ClockScreen;
extern lv_obj_t * ui_Label14;
extern lv_obj_t * ui_lblclock2;
void ui_event_btnpre3(lv_event_t * e);
extern lv_obj_t * ui_btnpre3;
void ui_event_btnconfirm3(lv_event_t * e);
extern lv_obj_t * ui_btnconfirm3;
void ui_event_btnpost3(lv_event_t * e);
extern lv_obj_t * ui_btnpost3;
void ui_event_btndelete3(lv_event_t * e);
extern lv_obj_t * ui_btndelete3;
extern lv_obj_t * ui_Label17;
extern lv_obj_t * ui_Label21;
extern lv_obj_t * ui_Label24;
extern lv_obj_t * ui_Label27;
extern lv_obj_t * ui_lblHeight2;
extern lv_obj_t * ui_Label37;
extern lv_obj_t * ui_Label38;
extern lv_obj_t * ui_Label40;
extern lv_obj_t * ui_barhalving;
// CUSTOM VARIABLES

// SCREEN: ui_SettingsScreen
void ui_SettingsScreen_screen_init(void);
extern lv_obj_t * ui_SettingsScreen;
extern lv_obj_t * ui_Label15;
void ui_event_btnpre4(lv_event_t * e);
extern lv_obj_t * ui_btnpre4;
void ui_event_btnconfirm4(lv_event_t * e);
extern lv_obj_t * ui_btnconfirm4;
void ui_event_btnpost4(lv_event_t * e);
extern lv_obj_t * ui_btnpost4;
void ui_event_btndelete4(lv_event_t * e);
extern lv_obj_t * ui_btndelete4;
extern lv_obj_t * ui_Label19;
extern lv_obj_t * ui_Label22;
extern lv_obj_t * ui_Label25;
extern lv_obj_t * ui_Label28;
void ui_event_btndelete1(lv_event_t * e);
extern lv_obj_t * ui_btndelete1;
extern lv_obj_t * ui_Label1;
extern lv_obj_t * ui_Container6;
extern lv_obj_t * ui_Container7;
extern lv_obj_t * ui_Container8;
extern lv_obj_t * ui_Label30;
extern lv_obj_t * ui_Label29;
extern lv_obj_t * ui_Label31;
extern lv_obj_t * ui_Container5;
extern lv_obj_t * ui_lblIp;
extern lv_obj_t * ui_lblPool;
extern lv_obj_t * ui_lblAddress;
extern lv_obj_t * ui_lblversion2;
extern lv_obj_t * ui_Label42;
// CUSTOM VARIABLES

// EVENTS
extern lv_obj_t * ui____initial_actions0;

// IMAGES AND IMAGE SETS
LV_IMG_DECLARE(ui_img_back_splash_png);    // assets/Back/splash.png
LV_IMG_DECLARE(ui_img_back_back_png);    // assets/Back/back.png
LV_IMG_DECLARE(ui_img_1552732429);    // assets/bitcoin-btc-logo-100.png

// FONTS
LV_FONT_DECLARE(ui_font_calculator128);
LV_FONT_DECLARE(ui_font_calculator16);
LV_FONT_DECLARE(ui_font_calculator24);
LV_FONT_DECLARE(ui_font_calculator32);
LV_FONT_DECLARE(ui_font_calculator48);
LV_FONT_DECLARE(ui_font_star24);
LV_FONT_DECLARE(ui_font_star32);
LV_FONT_DECLARE(ui_font_start16);

// UI INIT
void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
